
#include <iostream>

//инициализация переменных

unsigned int A = 4'294'967'294;
char C = 'F';
bool B = true;
float D = 3.14f;
//-------------------------------------------------------------------------------------------------------------------------
//операция sizeof
//-------------------------------------------------------------------------------------------------------------------------

int main_sizeof()
{
	bool flag = false;
	long long VeryLongVar = 1'000'000'000'000;
	double pi = 3.14;
	std::cout << sizeof(flag) << " " << sizeof(VeryLongVar) << " " << sizeof(pi) << std::endl;
	return 0;
}


//-------------------------------------------------------------------------------------------------------------------------
//область видимости переменных
//-------------------------------------------------------------------------------------------------------------------------

/*
int a = 100;//глобальная переменная

int main()
{
	
	short int b = 255; // локальная переменная, находится в стеке
	std::cout << a << " " << b;
	return 0;
}
*/

//-------------------------------------------------------------------------------------------------------------------------
//Оператор разрешения области видимости и вывод кириллицы в консоли
//-------------------------------------------------------------------------------------------------------------------------

/*
double var = 8.888; 
int main() {
	setlocale(LC_ALL, "Russian");    // подключаем русский язык в консоли
	int var = 1555;std::cout << "Локальная переменная: " << var << " Глобальная переменная: " << ::var;
	return 0;
}
*/

//-------------------------------------------------------------------------------------------------------------------------
//Массивы в С++
//-------------------------------------------------------------------------------------------------------------------------

/*
char Name[] = { 'J', 'o', 'n', '\0' };                                // \0 - символ конца строки в С++
char Name2 [ ] = "Jon\0";                                           // строка это тоже массив символов

int main()
{
std::cout << Name << " " << Name2 << std::endl;    // выведет на экран: Jon Jon

Name[0] = 'D';
Name2[1] = 'a';

std::cout << Name << " " << Name2 << std::endl;    // выведет на экран: Don Jan
}
*/


//-------------------------------------------------------------------------------------------------------------------------
//Ввод информации с клавиатуры — объект cin
//-------------------------------------------------------------------------------------------------------------------------

/*
using namespace std; // используем пространство имен std во всем файле
int main() 
{
	cout << "Enter your name: ";
	char name [ ] = "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
	cin >> name;                                                               // пользователь вводит свое имя
	
	cout << "Enter your age: ";
	unsigned int age = 0;
	cin >> age;                                                                 // пользователь вводит свой возраст
	
	cout << "Hi, " << name << "_" << age << endl;
	return 0;
}*/

//-------------------------------------------------------------------------------------------------------------------------
//Массив из enum
//-------------------------------------------------------------------------------------------------------------------------

// Перечисление - дни недели
/*
enum Week { Mon, Tue, Wed, Thu, Fri, Sat, Sun };

int main()
{
	Week work_days[4] = { Mon, Wed, Fri, Sat };
	Week holi_days[3] = { Tue, Thu, Sun };// Работаем с нашими массивами
	std::cout <<"First work day: "<< work_days[0] << std::endl;
	std::cout <<"First holiday: "<< holi_days[0] << std::endl;
	work_days[0] = Sun;
	holi_days[2] = Mon;
	return 0;
}*/

//-------------------------------------------------------------------------------------------------------------------------
//Структуры в С++
//-------------------------------------------------------------------------------------------------------------------------
/*
struct Employee   // Новый тип данных Сотрудник
{
	long id;                        // ID сотрудника
	unsigned short age;    // его возраст
	double salary;             // его зарплата
};

int main()
{
	Employee e1, e2;
	e1.id = 125037;
	e1.age = 31;
	e1.salary = 120'000.0;
	e2 = { 125038, 28, 75'000.0 };
	return 0;
}*/

//-------------------------------------------------------------------------------------------------------------------------
//Более сложные структуры
//-------------------------------------------------------------------------------------------------------------------------

/*
struct Employee             // Новый тип данных Сотрудник
{  
	long id;                        // ID сотрудника
    unsigned short age;    // его возраст
	double salary;             // его зарплата
};

enum CompanySize { CS_SMALL, CS_MIDDLE, CS_BIG };  // перечисление — размер компании
struct Company   // Новый тип данных Компания 
{
	Employee people[30];             // Ее сотрудники (30 максимум)
	Employee director;                  // Директор
	CompanySize size;                 // Размер компании
	unsigned int PeopleNumber;   // количество сотрудников
};

int main()
{
	Company comp;
	comp.director = { 125093, 45, 350'000.0 };
	comp.size = CS_MIDDLE;
	comp.PeopleNumber = 215;
	comp.people[0] = comp.director;
	comp.people[1] = { 134578, 34, 60'000.0 };
	return 0;
}
*/

//-------------------------------------------------------------------------------------------------------------------------
//Массив из структур

/*
struct Employee                   // Новый тип данных Сотрудник 
{  
	long id;                        // ID сотрудника
	unsigned short age;    // его возраст
	double salary;             // его зарплата
};

enum CompanySize { CS_SMALL, CS_MIDDLE, CS_BIG };  // перечисление — размер компании
struct Company // Новый тип данных Компания 
{  
	Employee people[30];             // Ее сотрудники (30 максимум)
	Employee director;                  // Директор
	CompanySize size;                 // Размер компании
	unsigned int PeopleNumber;   // количество сотрудников
	bool isBankrupt;                      // Является ли компания банкротом (true / false)
};

int main()
{
	Company comp[3]; // массив из 3х компаний
	comp[0].director = { 334567, 60, 150'000.0 };
	comp[0].isBankrupt = true;
	comp[0].PeopleNumber = 1;
	comp[0].size = CS_SMALL;
	comp[1] = comp[0];                // копируем информацию о первой компании во вторую
	comp[1].isBankrupt = false;
}
*/

//-------------------------------------------------------------------------------------------------------------------------
//Какой размер занимает пустая структура?
//-------------------------------------------------------------------------------------------------------------------------
/*
using namespace std;
struct TEmptyStruct
{

}; 
int main(int argc, char* argv[]) 
{ 
	TEmptyStruct s1;
	
	cout << sizeof(s1) << " " << sizeof(TEmptyStruct) << endl; 
	return 0; 
}
*/

//-------------------------------------------------------------------------------------------------------------------------
//Объединения - union
//-------------------------------------------------------------------------------------------------------------------------
/*
union EmployeeInfo         // Новый тип данных Информация о сотруднике 
{  
	long id;                        // ID сотрудника
	unsigned short age;    // его возраст
	double salary;             // его зарплата
};

int main() {
	EmployeeInfo info;
	info.age = 25;
	std::cout << info.salary << std::endl;    // Выведет на экран: -9.25596e+61
	std::cout << info.age << std::endl;        // Выведет на экран: 25
	std::cout << info.id << std::endl;           // Выведет на экран: -859045863

	info.salary = 175'000.0;
	std::cout << info.salary << std::endl;    // Выведет на экран: 175000
	std::cout << info.age << std::endl;        // Выведет на экран: 0
	std::cout << info.id << std::endl;           // Выведет на экран: 0
*/

//-------------------------------------------------------------------------------------------------------------------------
//Битовые поля структур
//-------------------------------------------------------------------------------------------------------------------------
/*
struct MyDate
{
	unsigned short  Day : 5;      // можно хранить 0..31
	unsigned short  Month : 4;  // можно хранить 0..15
	unsigned short  Year : 7;    // можно хранить 0..127 
};

int main()
{
	MyDate date1 = { 31, 01, 20 };
	std::cout << sizeof(date1);         // выведет на экран 2
}
*/

//-------------------------------------------------------------------------------------------------------------------------
//Битовые поля структур — битовые флаги
//-------------------------------------------------------------------------------------------------------------------------

struct MyBoolean
{
	unsigned int Flag : 1;   // битовый флаг
};

int main() 
{
	MyBoolean mybool;
	mybool.Flag = 1;   // можно записать только 0 или 1 так как мы дали полю только 1 бит.
	main_sizeof();
	return 0; 
}